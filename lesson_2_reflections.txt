a) What happens when you initialize a repository? Why do you need to do it?

Create .git folder and hashes/other needed files

b) How is the staging area different from the working directory and the repository? What value do you think it offers?

Selection of changed, unarchived files -> Specific commits

c) How can you use the staging area to make sure you have one commit per logical change?

Only stage files belonging to a logical change

d) What are some situations when branches would be helpful in keeping your history organized? How would branches help?

Different Versions, Test features, etc. . Easier Management of Versions without complicated Reversions.

e) How do the diagrams help you visualize the branch structure? 

By Visualizing the Branch structure.

f) What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

An update to the checked out branch containing all changes to the merged branches.

g) What are the pros and cons of Git’s automatic merging vs. always doing merges manually?

+ less work, streamlined process, no possibility for manual error, - possibly garbled code, no control, no supervision/information about merged files